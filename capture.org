#+title: Unofficial Manual: Org-roam

* Capture
If you haven't done so, have a look at [[https://www.orgroam.com/manual.html#Getting-Started][Getting Started]] (also available in the Emacs in-system help documentation, =C-h i=); it is 5-10 quick walk-through to get you started with using Org-roam.

Capturing your fleeting ideas in a note is the first step to start connecting and tinkering with your thoughts in Org-roam. The main commands you would use is =org-roam-capture=.

When you call the command, your cursor moves to the bottom of the Emacs screen, to the [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer.html][minibuffer]], and prompts you to enter a title of the new note. The title does not have to be elaborate for now, as you want to capture your fleeting thought quickly; you can come back and change the tile later. For now, keep it back of your mind that when you search for your notes later, Org-roam lists their titles for you to find them.

#+caption: Top: the scratch buffer; Bottom: Org-roam capture buffer with a title and some initial ideas in the note
#+label: fig:org-capture
#+name: org-capture
[[file:./images/2021-01-06T150531-OR-Maual-001.png]] 

You can quickly jot down your ideas ([@Fig:org-capture]), and press =C-c C-c= to save it. The note buffer goes away; you get back to where you were before, so you can get back to what you were doing before. This is good to minimize context switching.

If you do not like to save the note, press =C-c C-k= instead; the note goes away without cluttering your system. This =C-c C-c= and =C-c C-k= are something of a de facto standard operation in the world of Org Mode, so it will become your second nature very soon, if you are sticking to it as your main tool to organize your To-Do list and fleeting ideas.

In addition, you may also notice the title you entered already provided at the top part of the note, and the cursor moved to where you can start typing your ideas. Further more, the name of the file has been given automatically as well. These automations are achieved through Org-roam's [[https://www.orgroam.com/manual.html#The-Templating-System][templating system]]. This means that you have a full control of how your want the capturing process to be in the way you like.

Let's play with an example. Paste the code snippet below in the scratch buffer (or whatever buffer you feel like; it would be easier if you to turned on =emacs-lisp-mode= for syntax highlighting), and evaluate it. It will add a new Org-roam capture template to the default one (there is a default one when you have installed Org-roam). Try not to worry about "messing things up" for now. If you quick Emacs, and comes back in, this change will not be kept.

#+begin_src emacs-lisp
  (add-to-list 'org-roam-capture-templates
               '("p" "project" plain
                 (function org-roam--capture-get-point) "%?"
                 :file-name "project/%<%Y-%m-%dT%H%M%S>"
                 :head "#+title: ${title}\n#+created: %<%Y-%m-%dT%H%M%S>"
                 :unnarrowed t))
#+end_src

Once the code is evaluated, you should see the template repeated in the minibuffer; this means Emacs has done something based on your command. Call =org-roam-capture= to create a new note. This time, you should see a menu that looks like this to pop up.

[[file:./images/2021-01-06T175543-OR-Maual-002.png]]

It's a menu for you to choose a template from. Now that you have more than one, Emacs asks you which one you want to use this time. Press "p" on your keyboard to choose the "project" template that you have just added.

[[file:./images/2021-01-06T181237-OR-Maual-001.png]]

Now you see that the new note has additional metadata, "created" with the current time already entered. The file name also is slightly different without the note's title -- it only has the time stamp as the filename. If you also look carefully, this file is added in a sub-directory named "project", instead of saved directly under your =org-roam-directory=. 

If you are not familiar with this type of scripting to configure your software applications, you might be overwhelmed. That's normal. The opportunities and scope to extend how Emacs behaves are enormous. Org-roam's templating system is based on Org Mode's, and there is extensive documentation [[https://orgmode.org/manual/Capture-templates.html][available online]] and in-system. There is no need to learn everything up-front. Try a small tweaking of the default template, one piece at a time. Googling helps, too. 

This covers the basics of the Capture step in Org-roam. There are some more varieties on top of this foundation. See the next section for more.

<It would be good if more can be added by PR contributions, or fork; whatever suites you...>

* More

- =org-roam-find-file= :: Essentially does the same thing as capture, but it will take you to the note you have created, rather than back to where you were
  
- =org-roam-find-file-immediate= :: This one lets you skip the process of choosing the template when you have many. See its documentation to see how you can tell the system which template to use. 

- org-roam-protocols  :: Capturing website from your browser

- org-roam-bibtex :: Taking notes on academic journals, papers, and books:

;; Local Variables:
;; eval: (if (find-library "org-marginalia")(progn (require 'org-marginalia)(org-marginalia-mode 1)))
;; End:
